Phase: SCRules
Input:  Lookup Split Token NounChunk
Options: control = appelt

Macro: LIST

(
({NounChunk}{Token.string == ","})[0,10]
{NounChunk}
({Token.string == ","})?
{Token.category == CC}
{NounChunk}
)


Macro: ADJLIST

(
({Token.category == JJ}{Token.string == ","})[0,10]
{Token.category == JJ}
({Token.string == ","})?
{Token.category == CC}
{Token.category == JJ}
)


// 10
Rule:OPDPPW
// Birds have feathers. Water areas have names in natural language.

(
({NounChunk}):class
{Lookup.minorType == have}
(LIST|{NounChunk}):properties
)

-->
:class.Class = {rule=OPDPPW},

{
// "properties" matches LHS label
  List annList = new ArrayList((AnnotationSet)bindings.get("properties"));

  //sort the list by offset
  Collections.sort(annList, new OffsetComparator());

  //iterate through the matched annotations
  for(int i = 0; i < annList.size(); i++)
   {
    Annotation anAnn = (Annotation)annList.get(i);

// check that the new annotation is a NounChunk 

if ((anAnn.getType().equals("NounChunk")) )

{ 
    FeatureMap features = Factory.newFeatureMap();

// change this for a different rule name"
    features.put("rule", "OPDPPW");
  
// change "Subclass" for a different annotation name
 annotations.add(anAnn.getStartNode(), anAnn.getEndNode(), "ObjectPDataTPartW",
 features);

}
}
}
