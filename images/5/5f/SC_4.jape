Phase: SCRules
Input:  Lookup Split Token NounChunk
Options: control = appelt

Macro: LIST

(
({NounChunk}{Token.string == ","})[0,10]
{NounChunk}
({Token.string == ","})?
{Token.category == CC}
{NounChunk}
)


// 4
Rule:SC3
// There are CD | QUAN [CN] NP<superclass> PARA [(NP<subclass>,)* and] NP<subclass>
// There are two types of narcotic analgesics: the opiates and the opioids.
// There are several kinds of memory: expensive memory, short term memory, and long-term memory.

(
{Token.category == EX}
{Lookup.minorType == be}
({Lookup.majorType == numbers}|{Token.category == JJ})
{Lookup.majorType == CN}
({NounChunk}):superclass
({Token.kind == punctuation})?
(LIST):subclass
)

-->
:superclass.Superclass = {rule="SC3"},
{
// "subclass" matches LHS label
  List annList = new ArrayList((AnnotationSet)bindings.get("subclass"));

  //sort the list by offset
  Collections.sort(annList, new OffsetComparator());

  //iterate through the matched annotations
  for(int i = 0; i < annList.size(); i++)
   {
    Annotation anAnn = (Annotation)annList.get(i);

// check that the new annotation is a NounChunk 

if ((anAnn.getType().equals("NounChunk")) )

{ 
    FeatureMap features = Factory.newFeatureMap();

// change this for a different rule name"
    features.put("rule", "SC3");
  
// change "Subclass" for a different annotation name
 annotations.add(anAnn.getStartNode(), anAnn.getEndNode(), "Subclass",
 features);

}
}
}